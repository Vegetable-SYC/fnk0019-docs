# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016 - 2024, support@freenove.com
# This file is distributed under the same license as the fnk0066-docs
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: fnk0066-docs v1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-12-04 09:39+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: zh_CN\n"
"Language-Team: zh_CN <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.16.0\n"

#: ../../source/fnk0019/codes/c-lang/Blink.rst:3
#: a6accbcffe2348959d19329296b0a356
msgid "Chapter LED"
msgstr "Chapter LED"

#: ../../source/fnk0019/codes/c-lang/Blink.rst:5
#: 0b81f1e1e2fe4101b0287e8eb2df3ea6
msgid ""
"This chapter is the Start Point in the journey to build and explore RPi "
"electronic projects. We will start with simple “Blink” project."
msgstr "本章是构建和探索RPi旅程的起点,电子项目。我们将从简单的“闪烁灯”项目开始。"

#: ../../source/fnk0019/codes/c-lang/Blink.rst:8
#: d11e2fcb609e4d36a7df4a1903892779
msgid "Project Blink"
msgstr ""

#: ../../source/fnk0019/codes/c-lang/Blink.rst:10
#: f3aaeddb74344946991991e2f312c3ca
msgid "In this project, we will use RPi to control blinking a common LED."
msgstr ""

#: ../../source/fnk0019/codes/c-lang/Blink.rst:13
#: 1b38bba26c024a4da0d83987353d2c47
msgid "Component List"
msgstr ""

#: ../../source/fnk0019/codes/c-lang/Blink.rst 7bcb37073771462d8c13f21b67c0eb93
msgid "Raspberry Pi"
msgstr ""

#: ../../source/fnk0019/codes/c-lang/Blink.rst 4303b7ad428e44549420e488065b8662
msgid "(Recommended: Raspberry Pi 5 / 4B / 3B+ / 3B)"
msgstr ""

#: ../../source/fnk0019/codes/c-lang/Blink.rst 7fb37cc7567f4ac7a9a4ff3ee422f528
msgid "(Compatible: 3A+ / 2B / 1B+ / 1A+ / Zero W / Zero)"
msgstr ""

#: ../../source/fnk0019/codes/c-lang/Blink.rst:22
#: 11b84cda32554a6387372676ed84949d
msgid "GPIO Extension Board & Ribbon Cable"
msgstr ""

#: ../../source/fnk0019/codes/c-lang/Blink.rst:27
#: 5598d486d71145abbd45af3559356b68
msgid "Breadboard x1"
msgstr ""

#: ../../source/fnk0019/codes/c-lang/Blink.rst:32
#: 0efa1f8b59ef4ac28eb22ced5a9399f8
msgid "LED x1"
msgstr ""

#: ../../source/fnk0019/codes/c-lang/Blink.rst:37
#: 2bef36e8a773488ca7084b1099b2778f
msgid "Resistor 220Ω x1"
msgstr ""

#: ../../source/fnk0019/codes/c-lang/Blink.rst:42
#: d0b24f4eee804241a6050936df5f7700
msgid "Jumper (some)"
msgstr ""

#: ../../source/fnk0019/codes/c-lang/Blink.rst:47
#: 4c0b7fc07b8f4e458d2fd34bd549f221
msgid ""
"In the components list, 3B GPIO, Extension Shield Raspberry and "
"Breadboard are necessary for each project. Later, they will be reference "
"by text only (no images as in above)."
msgstr ""

#: ../../source/fnk0019/codes/c-lang/Blink.rst:50
#: 0369111f9e2f4daaa83d09e85e7a7127
msgid "GPIO"
msgstr ""

#: ../../source/fnk0019/codes/c-lang/Blink.rst:51
#: 864fbba6405e416292add648625e0f94
msgid ""
"GPIO: General Purpose Input/Output. Here we will introduce the specific "
"function of the pins on the Raspberry Pi and how you can utilize them in "
"all sorts of ways in your projects. Most RPi Module pins can be used as "
"either an input or output, depending on your program and its functions."
msgstr ""

#: ../../source/fnk0019/codes/c-lang/Blink.rst:53
#: f4ab85523789427d8254d880cf114ede
msgid ""
"When programming GPIO pins there are 3 different ways to reference them: "
"**GPIO Numbering**, **Physical Numbering** and **WiringPi GPIO "
"Numbering**."
msgstr ""

#: ../../source/fnk0019/codes/c-lang/Blink.rst:56
#: 690ae578a5c54bbe8f3f4582a3fb89c6
msgid "BCM GPIO Numbering"
msgstr ""

#: ../../source/fnk0019/codes/c-lang/Blink.rst:57
#: 0e2b83b7ede04515b0633deb19ece8db
msgid ""
"The Raspberry Pi CPU uses Broadcom (BCM) processing chips BCM2835, "
"BCM2836 or BCM2837. GPIO pin numbers are assigned by the processing chip "
"manufacturer and are how the computer recognizes each pin. The pin "
"numbers themselves do not make sense or have meaning as they are only a "
"form of identification. Since their numeric values and physical locations"
" have no specific order, there is no way to remember them so you will "
"need to have a printed reference or a reference board that fits over the "
"pins."
msgstr ""

#: ../../source/fnk0019/codes/c-lang/Blink.rst:59
#: 8714d0e911124ae98dc4df1838e8e395
msgid "Each pin’s functional assignment is defined in the image below:"
msgstr ""

#: ../../source/fnk0019/codes/c-lang/Blink.rst:67
#: 562f30c585014b8a92ed8aaacb34e0a3
msgid ""
"For more details about pin definition of GPIO, please refer to "
"`<http://pinout.xyz/>`_"
msgstr ""

#: ../../source/fnk0019/codes/c-lang/Blink.rst:70
#: 8ccbe5c5ef114fe1b4393088ca0e272a
msgid "PHYSICAL Numbering"
msgstr ""

#: ../../source/fnk0019/codes/c-lang/Blink.rst:71
#: 570683edff0c46baa44d302371aa616f
msgid ""
"Another way to refer to the pins is by simply counting across and down "
"from pin 1 at the top left (nearest to the SD card). This is 'Physical "
"Numbering', as shown below:"
msgstr ""

#: ../../source/fnk0019/codes/c-lang/Blink.rst:77
#: 128fb31fbbe24c59b554878716822099
msgid "WiringPi GPIO Numbering"
msgstr ""

#: ../../source/fnk0019/codes/c-lang/Blink.rst:78
#: 0090f3b6517246d1a18fcee1470fdd32
msgid ""
"Different from the previous two types of GPIO serial numbers, RPi GPIO "
"serial number of the WiringPi are numbered according to the BCM chip use "
"in RPi."
msgstr ""

#: ../../source/fnk0019/codes/c-lang/Blink.rst:84
#: 02d86f453ff24cf9a0aafd8a425b3694
msgid ""
"For more details, please refer to `<https://projects.drogon.net"
"/raspberry-pi/wiringpi/pins/>`_"
msgstr ""

#: ../../source/fnk0019/codes/c-lang/Blink.rst:86
#: 5aae6ece86a54343b3e1e535f42087ed
msgid "You can also use the following command to view their correlation."
msgstr ""

#: ../../source/fnk0019/codes/c-lang/Blink.rst:96
#: 83e01075130749fb9de95635482b8ae9
msgid "Circuit"
msgstr ""

#: ../../source/fnk0019/codes/c-lang/Blink.rst:97
#: daae442515ef4850ae790227e56e5690
msgid ""
"First, disconnect your RPi from the GPIO Extension Shield. Then build the"
" circuit according to the circuit and hardware diagrams. After the "
"circuit is built and verified correct, connect the RPi to GPIO Extension "
"Shield."
msgstr ""

#: ../../source/fnk0019/codes/c-lang/Blink.rst:100
#: a11868ed0b2a45169d7c9e631c6c38fb
msgid ""
"CAUTION: Avoid any possible short circuits (especially connecting 5V or "
"GND, 3.3V and GND)!"
msgstr ""

#: ../../source/fnk0019/codes/c-lang/Blink.rst:103
#: 0aa1e66ae05a4835aae73d5722686fed
msgid ""
"WARNING: A short circuit can cause high current in your circuit, create "
"excessive component heat and cause permanent damage to your RPi!"
msgstr ""

#: ../../source/fnk0019/codes/c-lang/Blink.rst:105
#: 5686fbe237d44b688d6d0d5d37cad67e
msgid "**Schematic diagram**"
msgstr ""

#: ../../source/fnk0019/codes/c-lang/Blink.rst:110
#: f83cd27a176d4c939cf3b30c81750d0c
msgid "**Hardware connection**"
msgstr ""

#: ../../source/fnk0019/codes/c-lang/Blink.rst:116
#: e820c43e1c3a47dab00ae1023eea7a72
msgid ""
":red:`If you need any support, please contact us via:` "
":blue:`support@freenove.com`"
msgstr ""

#: ../../source/fnk0019/codes/c-lang/Blink.rst:119
#: 6ef226ea6cac4ca688152ffd6d00eb98
msgid ""
"Do NOT rotate Raspberry Pi to change the way of this connection. Please "
"plug T extension fully into breadboard."
msgstr ""

#: ../../source/fnk0019/codes/c-lang/Blink.rst:123
#: 36906b4c443b4715912e5c8fde9aeb44
msgid "Youtube video `<https://youtu.be/hGQtnxsr1L4>`_"
msgstr ""

#: ../../source/fnk0019/codes/c-lang/Blink.rst:129
#: 65b909b8135447b2b08897880650efc7
msgid ""
"The connection of Raspberry Pi T extension board is as below. **Don't "
"reverse the ribbon**."
msgstr ""

#: ../../source/fnk0019/codes/c-lang/Blink.rst:135
#: 50145a75a0de41489ad7cf401cb5b164
msgid ""
"If you have a fan, you can connect it to 5V GND of breadboard via jumper "
"wires."
msgstr ""

#: ../../source/fnk0019/codes/c-lang/Blink.rst:137
#: 5411256d93c14788a8003f160daceb9c
msgid ""
"**How to distinguish resistors?** There are only three kind of resistors "
"in this kit."
msgstr ""

#: ../../source/fnk0019/codes/c-lang/Blink.rst:140
#: 7c86938c986b4ebfab48bb93a5981884
msgid "The one with *1 red ring* is 10KΩ \\"
msgstr ""

#: ../../source/fnk0019/codes/c-lang/Blink.rst:145
#: ../../source/fnk0019/codes/c-lang/Blink.rst:150
#: 71ab8c407a4b4058bb3424e42750b23f d41014482e1041e388d8a79744df2eee
msgid "The one with *1 red ring* is 10KΩ"
msgstr ""

#: ../../source/fnk0019/codes/c-lang/Blink.rst:156
#: bf7aacd849b7422cb106c1272a4fefce
msgid ""
"Future hardware connection diagrams will only show that part of "
"breadboard and GPIO Extension Shield."
msgstr ""

#: ../../source/fnk0019/codes/c-lang/Blink.rst:159
#: 20f68e85c3674ea4b8627317a557420f
msgid "Component knowledge"
msgstr ""

#: ../../source/fnk0019/codes/c-lang/Blink.rst:162
#: fd569e55a11845b7814f66c44316f15d
msgid "LED"
msgstr ""

#: ../../source/fnk0019/codes/c-lang/Blink.rst:163
#: b34b0c8017d2430190023435f94209a7
msgid ""
"An LED is a type of diode. All diodes only work if current is flowing in "
"the correct direction and have two Poles. An LED will only work (light "
"up) if the longer pin (+) of LED is connected to the positive output from"
" a power source and the shorter pin is connected to the negative (-) "
"output, which is also referred to as Ground (GND). This type of component"
" is known as “Polar” (think One-Way Street)."
msgstr ""

#: ../../source/fnk0019/codes/c-lang/Blink.rst:165
#: 78f17d4936d14d3c9715fa53779f824b
msgid ""
"All common 2 lead diodes are the same in this respect. Diodes work only "
"if the voltage of its positive electrode is higher than its negative "
"electrode and there is a narrow range of operating voltage for most all "
"common diodes of 1.9 and 3.4V. If you use much more than 3.3V the LED "
"will be damaged and burnt out."
msgstr ""

#: ../../source/fnk0019/codes/c-lang/Blink.rst:171
#: e0e362379ba147f7b080adc4b432dbce
msgid ""
"Note: LEDs cannot be directly connected to a power supply, which usually "
"ends in a damaged component. A resistor with a specified resistance value"
" must be connected in series to the LED you plan to use."
msgstr ""

#: ../../source/fnk0019/codes/c-lang/Blink.rst:174
#: ../../source/fnk0019/codes/c-lang/Blink.rst:197
#: 366bff6316ce4efba48c912cc75ff866 7f2c5be5e86842b198ea5062dc619b38
msgid "Resistor"
msgstr ""

#: ../../source/fnk0019/codes/c-lang/Blink.rst:175
#: 2a9fd5709e854d2eace604ffbce6827d
msgid ""
"Resistors use Ohms (Ω) as the unit of measurement of their resistance "
"(R). 1MΩ=1000kΩ, 1kΩ=1000Ω. A resistor is a passive electrical component "
"that limits or regulates the flow of current in an electronic circuit. On"
" the left, we see a physical representation of a resistor, and the right "
"is the symbol used to represent the presence of a resistor in a circuit "
"diagram or schematic."
msgstr ""

#: ../../source/fnk0019/codes/c-lang/Blink.rst:181
#: 25b03eede14240a0b28e90172a3c9d1f
msgid ""
"The bands of color on a resistor is a shorthand code used to identify its"
" resistance value. For more details of resistor color codes, please refer"
" to the card in the kit package. With a fixed voltage, there will be less"
" current output with greater resistance added to the circuit. The "
"relationship between Current, Voltage and Resistance can be expressed by "
"this formula: I=V/R known as Ohm’s Law where I = Current, V = Voltage and"
" R = Resistance. Knowing the values of any two of these allows you to "
"solve the value of the third."
msgstr ""

#: ../../source/fnk0019/codes/c-lang/Blink.rst:184
#: a79a9d11960d4afb82c282405d8ebbd1
msgid "In the following diagram, the current through R1 is:"
msgstr ""

#: ../../source/fnk0019/codes/c-lang/Blink.rst:186
#: fc9f62d766c44effa24330e1bda2a3c8
msgid ""
"I=U/R=5V/10kΩ=0.0005A=0.5mA.\n"
"\n"
msgstr ""

#: ../../source/fnk0019/codes/c-lang/Blink.rst:191
#: 8e809f2bca554faca4f3b477ba608b3c
msgid ""
"WARNING: Never connect the two poles of a power supply with anything of "
"low resistance value (i.e. a metal object or bare wire) this is a Short "
"and results in high current that may damage the power supply and "
"electronic components."
msgstr ""

#: ../../source/fnk0019/codes/c-lang/Blink.rst:194
#: 86e1aade38144e578837aac78a550471
msgid ""
"Note: Unlike LEDs and Diodes, Resistors have no poles and re non-polar "
"(it does not matter which direction you insert them into a circuit, it "
"will work the same)"
msgstr ""

#: ../../source/fnk0019/codes/c-lang/Blink.rst:198
#: 80b05af41e4042848216cf40d29bd9cd
msgid ""
"Here we have a small breadboard as an example of how the rows of holes "
"(sockets) are electrically attached. The left picture shows the ways the "
"pins have shared electrical connection and the right picture shows the "
"actual internal metal, which connect these rows electrically."
msgstr ""

#: ../../source/fnk0019/codes/c-lang/Blink.rst:207
#: a35eefea18014cc6b24e207c63a50c63
msgid "GPIO Extension Board"
msgstr ""

#: ../../source/fnk0019/codes/c-lang/Blink.rst:208
#: a2e9e31fc2b04dada48e027273cf2174
msgid ""
"GPIO board is a convenient way to connect the RPi I/O ports to the "
"breadboard directly. The GPIO pin sequence on Extension Board is "
"identical to the GPIO pin sequence of RPi."
msgstr ""

#: ../../source/fnk0019/codes/c-lang/Blink.rst:215
#: 4ca41a2a34f84351b101fdc2d9e0ab49
msgid "Code"
msgstr ""

#: ../../source/fnk0019/codes/c-lang/Blink.rst:216
#: 705ecda786944ca1ba518836a346b785
msgid ""
"According to the circuit, when the GPIO17 of RPi output level is high, "
"the LED turns ON. Conversely, when the GPIO17 RPi output level is low, "
"the LED turns OFF. Therefore, we can let GPIO17 cycle output high and "
"output low level to make the LED blink. We will use both C code to "
"achieve the target."
msgstr ""

#: ../../source/fnk0019/codes/c-lang/Blink.rst:219
#: f85c816efa7344c0ada38b3eb61d9178
msgid "C language codes"
msgstr ""

#: ../../source/fnk0019/codes/c-lang/Blink.rst:220
#: 5ee356309e284cc9b439557cf29d9aa7
msgid ""
"First, enter this command into the Terminal one line at a time. Then "
"observe the results it brings on your project, and learn about the code "
"in detail."
msgstr ""

#: ../../source/fnk0019/codes/c-lang/Blink.rst:222
#: 61abd049f9c8404193dbfb616aa1b238
msgid ""
"If you want to execute it with editor, please refer to section Code "
"Editor<> to configure."
msgstr ""

#: ../../source/fnk0019/codes/c-lang/Blink.rst:225
#: de709ac670d04137bb79c887ba53f7c5
msgid ""
":red:`If you have any concerns, please contact us via:` "
"support@freenove.com"
msgstr ""

#: ../../source/fnk0019/codes/c-lang/Blink.rst:227
#: ff509c9ec89c47e5ab91958379a9e6b9
msgid "It is recommended that to execute the code via command line."
msgstr ""

#: ../../source/fnk0019/codes/c-lang/Blink.rst:229
#: 261f2477c991466ebe5b811f6e417ca9
msgid ""
"If you did not update wiring pi, please execute following commands **one "
"by one**."
msgstr ""

#: ../../source/fnk0019/codes/c-lang/Blink.rst:238
#: b20b0f11efb84050a52d8c631125deff
msgid "Use ``cd`` command to enter 01.1.1_Blink directory of C code."
msgstr ""

#: ../../source/fnk0019/codes/c-lang/Blink.rst:244
#: 4910a428c2db4aa189232d317aff324b
msgid ""
"Use the following command to compile the code “Blink.c” and generate "
"executable file “Blink”."
msgstr ""

#: ../../source/fnk0019/codes/c-lang/Blink.rst:250
#: e839caa522824d5482c78f377babc2d4
msgid "Then run the generated file “blink”."
msgstr ""

#: ../../source/fnk0019/codes/c-lang/Blink.rst:256
#: 294b5275cd214b89ada5a679e03ccb62
msgid ""
"Now your LED should start blinking! CONGRATUALTIONS! You have "
"successfully completed your first RPi circuit!"
msgstr ""

#: ../../source/fnk0019/codes/c-lang/Blink.rst:258
#: b077bf5bf47343ed83654006154e0b3d
msgid ""
"You can press ``Ctrl+C`` to end the program. The following is the program"
" code:"
msgstr ""

#: ../../source/fnk0019/codes/c-lang/Blink.rst:265
#: 80e1046327b94c5d88f7ddc17370288e
msgid "In the code above, the configuration function for GPIO is shown below as:"
msgstr ""

#: ../../source/fnk0019/codes/c-lang/Blink.rst:269
#: e270a25dc0bc4f9187a582fb0f9c9374
msgid ""
"This sets the mode of a pin to either INPUT, OUTPUT, PWM_OUTPUT or "
"GPIO_CLOCK. Note that only wiringPi pin 1 (BCM_GPIO 18) supports PWM "
"output and only wiringPi pin 7 (BCM_GPIO 4) supports CLOCK output modes."
msgstr ""

#: ../../source/fnk0019/codes/c-lang/Blink.rst:271
#: 9cb865e9cbec49dbbdf79d29cb454d1b
msgid ""
"This function has no effect when in Sys mode. If you need to change the "
"pin mode, then you can do it with the gpio program in a script before you"
" start your program"
msgstr ""

#: ../../source/fnk0019/codes/c-lang/Blink.rst:275
#: d249de7f1a22450f8bc1f0efa390c483
msgid ""
"Writes the value HIGH or LOW (1 or 0) to the given pin, which must have "
"been previously set as an output."
msgstr ""

#: ../../source/fnk0019/codes/c-lang/Blink.rst:279
#: 94826683b2aa4263b0ec53174f3b54d3
msgid ""
"For more related wiringpi functions, please refer to "
"https://github.com/WiringPi/WiringPi"
msgstr ""

#: ../../source/fnk0019/codes/c-lang/Blink.rst:281
#: 6c628dff324c40e39f8e88467511a541
msgid ""
"GPIO connected to ledPin in the circuit is GPIO17 and GPIO17 is defined "
"as 0 in the wiringPi numbering. So ledPin should be defined as 0 pin. You"
" can refer to the corresponding table in Chapter 0."
msgstr ""

#: ../../source/fnk0019/codes/c-lang/Blink.rst:287
#: bd9f5390f2f44878954a635a65b1ba35
msgid "GPIO Numbering Relationship"
msgstr ""

#: ../../source/fnk0019/codes/c-lang/Blink.rst:292
#: bd1e2f330e8d4a0e8c98f1440af37ee8
msgid "In the main function ``main()``, initialize ``wiringPi`` first."
msgstr ""

#: ../../source/fnk0019/codes/c-lang/Blink.rst:298
#: a8fce9230ff84807991551d2254ceb02
msgid ""
"After the wiringPi is initialized successfully, you can set the ledPin to"
" output mode and then enter the while loop, which is an endless loop (a "
"while loop). That is, the program will always be executed in this cycle, "
"unless it is ended because of external factors. In this loop, use "
"``digitalWrite (ledPin, HIGH)`` to make ledPin output high level, then "
"LED turns ON. After a period of time delay, use ``digitalWrite(ledPin, "
"LOW)`` to make ledPin output low level, then LED turns OFF, which is "
"followed by a delay. Repeat the loop, then LED will start blinking."
msgstr ""

#: ../../source/fnk0019/codes/c-lang/Blink.rst:312
#: 38ac7ba61a85419fbe0b249c019f9084
msgid "Freenove Car, Robot and other products for Raspberry Pi"
msgstr ""

#: ../../source/fnk0019/codes/c-lang/Blink.rst:314
#: ../../source/fnk0019/codes/c-lang/Blink.rst:348
#: 5eb549a27db5457aa4ca4888dc0a5f01 70fd9a97338a4ad7b54d2a532f5c0f67
msgid ""
"We also have car and robot kits for Raspberry Pi. You can visit our "
"website for details."
msgstr ""

#: ../../source/fnk0019/codes/c-lang/Blink.rst:316
#: ../../source/fnk0019/codes/c-lang/Blink.rst:350
#: 37bbcc695de9408cab6973bcba8ce285 808457fff38a46a9b51f7fe4680d5ed6
msgid ":xx-large:`https://www.amazon.com/freenove`"
msgstr ""

#: ../../source/fnk0019/codes/c-lang/Blink.rst:318
#: ../../source/fnk0019/codes/c-lang/Blink.rst:352
#: 0591dfb825d043d683634c335accb5d7 54d35e1c98a349f0b422e8a90597ced5
msgid "**FNK0043**--:green:`Freenove 4WD Smart Car Kit for Raspberry Pi`"
msgstr ""

#: ../../source/fnk0019/codes/c-lang/Blink.rst:327
#: ../../source/fnk0019/codes/c-lang/Blink.rst:361
#: bda0a9cb46634584bbf9169bfa10e02b c75e19a1ebee4604a8b805e7194af448
msgid "**FNK0050**--:green:`Freenove Robot Dog Kit for Raspberry Pi`"
msgstr ""

#: ../../source/fnk0019/codes/c-lang/Blink.rst:336
#: ../../source/fnk0019/codes/c-lang/Blink.rst:370
#: 9bcb21f3233d46c18e187a2cdc988fee e1cab4bc131f480194a01e86a5b30969
msgid "**FNK0052**--:green:`Freenove_Big_Hexapod_Robot_Kit_for_Raspberry_Pi`"
msgstr ""

